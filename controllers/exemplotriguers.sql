# TRG_ALUNO

create or replace
TRIGGER "TRG_ALUNO" 
 BEFORE
  INSERT
 ON AS_SCURSOS.TB_ALUNO
REFERENCING NEW AS NEW OLD AS OLD
 FOR EACH ROW
DECLARE
  total INTEGER;
BEGIN
select count(*) into total from AS_SCURSOS.TB_ALUNO;
if (total = 0) then
SELECT 1 INTO :NEW.ALUNO_COD_PK FROM dual;
else
SELECT max(nvl(ALUNO_COD_PK, 0)) +1  INTO :NEW.ALUNO_COD_PK FROM AS_SCURSOS.TB_ALUNO;
end if;
END;

#TRG_CURSO

create or replace
TRIGGER "TRG_CURSO" 
 BEFORE
  INSERT
 ON AS_SCURSOS.TB_CURSO
REFERENCING NEW AS NEW OLD AS OLD
 FOR EACH ROW
DECLARE
  total INTEGER;
BEGIN
select count(*) into total from AS_SCURSOS.TB_CURSO;
if (total = 0) then
SELECT 1 INTO :NEW.CURSO_COD_PK FROM dual;
else
SELECT max(nvl(CURSO_COD_PK, 0)) +1  INTO :NEW.CURSO_COD_PK FROM AS_SCURSOS.TB_CURSO;
end if;
END;

#TRG_MATRICULA

create or replace
TRIGGER "TRG_MATRICULA" 
 BEFORE
  INSERT
 ON AS_SCURSOS.TB_MATRICULA
REFERENCING NEW AS NEW OLD AS OLD
 FOR EACH ROW
DECLARE
  total INTEGER;
BEGIN
select count(*) into total from AS_SCURSOS.TB_MATRICULA;
if (total = 0) then
SELECT 1 INTO :NEW.MATRICULA_COD_PK FROM dual;
else
SELECT max(nvl(MATRICULA_COD_PK, 0)) +1  INTO :NEW.MATRICULA_COD_PK FROM AS_SCURSOS.TB_MATRICULA;
end if;
END;

#TRG_TIPO_ALUNO

create or replace
TRIGGER "TRG_TIPO_ALUNO" 
 BEFORE
  INSERT
 ON AS_SCURSOS.TB_TIPO_ALUNO
REFERENCING NEW AS NEW OLD AS OLD
 FOR EACH ROW
DECLARE
  total INTEGER;
BEGIN
select count(*) into total from AS_SCURSOS.TB_TIPO_ALUNO;
if (total = 0) then
SELECT 1 INTO :NEW.TIPO_ALUNO_COD_PK FROM dual;
else
SELECT max(nvl(TIPO_ALUNO_COD_PK, 0)) +1  INTO :NEW.TIPO_ALUNO_COD_PK FROM AS_SCURSOS.TB_TIPO_ALUNO;
end if;
END;

#TRG_TURMA

create or replace
TRIGGER "TRG_TURMA" 
 BEFORE
  INSERT
 ON AS_SCURSOS.TB_TURMA
REFERENCING NEW AS NEW OLD AS OLD
 FOR EACH ROW
DECLARE
  total INTEGER;
BEGIN
select count(*) into total from AS_SCURSOS.TB_TURMA;
if (total = 0) then
SELECT 1 INTO :NEW.TURMA_COD_PK FROM dual;
else
SELECT max(nvl(TURMA_COD_PK, 0)) +1  INTO :NEW.TURMA_COD_PK FROM AS_SCURSOS.TB_TURMA;
end if;
END;

